ChatGPT question: With detailed steps tell how to configure aws codepipeline to github and ec2 for a blue green deployment and traffic switch

create 3 roles-
  CodePipleine -> CodePipelineServiceRole , policy - AWSCodePipelineFullAccess
CodeDeploy -> CodeDeployServiceRole , policy -> AWSCodeDeployRole
  EC2 -> EC2CodeDeployRole -> AmazonEC2RoleforAWSCodeDeploy
  Launch 2 instances and Attach the EC2CodeDeployRole IAM role to these instances.

Ensure your instances are in the same region and VPC.

create app in codedeploy
In the CodeDeploy Console, within your application, create two deployment groups (blue and green).
choose blue/green and tags - blue and green
Select the appropriate EC2 instances for each deployment group.
Specify the service role CodeDeployServiceRole.
Choose ALB and tgs

ssh to both
  Install the CodeDeploy agent on 2 instances:
sudo yum update -y
sudo yum install ruby -y
# Install wget (for Amazon Linux)
sudo yum install wget -y
cd /home/ec2-user
wget https://aws-codedeploy-us-west-2.s3.us-west-2.amazonaws.com/latest/install
# Make the install script executable
chmod +x ./install
sudo ./install auto
sudo systemctl start codedeploy-agent
sudo systemctl status codedeploy-agent

prep app code to define deployment process: appspec.yml

Create codepipeline:
Click on "Create pipeline".
Name your pipeline (e.g., BlueGreenPipeline).
Select the CodePipelineServiceRole.

Source Stage:
Choose "GitHub" as the source provider.
Connect to your GitHub account and select the repository and branch to use.
Configure a webhook to trigger the pipeline on code changes.

Build Stage (Optional):
If you need a build stage, add a build provider (e.g., AWS CodeBuild) to compile and test your application.
Deploy Stage:

Add a deploy action.
Choose AWS CodeDeploy as the deploy provider.
Select your CodeDeploy application (BlueGreenApp) and deployment group (e.g., blue).

createa new user in iam and configure aws cli byaccess key way
verify aws configure bu cmd -> aws sts get-caller-identity

